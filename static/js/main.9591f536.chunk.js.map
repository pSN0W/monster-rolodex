{"version":3,"sources":["Components/cards/card.jsx","Components/card-list/card-list.jsx","Components/search-box/search.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","user","id","name","email","CardList","monster","map","SearchBox","placeholder","handleChange","type","onChange","App","state","monsters","searchfield","fetch","then","response","json","setState","this","filteredMonster","filter","mon","toLowerCase","includes","e","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yUAIaA,EAAO,SAACC,GACjB,OACI,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAG,+BAA0BF,EAAMG,KAAKC,GAArC,4BACR,6BAAMJ,EAAMG,KAAKE,OACjB,4BAAKL,EAAMG,KAAKG,YCLfC,EAAW,SAACP,GACvB,OACE,qBAAKC,UAAU,WAAf,SACGD,EAAMQ,QAAQC,KAAI,SAACD,GAAD,OACjB,cAAC,EAAD,CAAuBL,KAAQK,GAApBA,EAAQJ,UCJdM,G,MAAY,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aACvC,OACE,uBACEX,UAAU,SACVY,KAAK,SACLF,YAAaA,EACbG,SAAUF,MC6BDG,E,kDAjCb,aAAe,IAAD,8BACZ,gBACKC,MAAQ,CACXC,SAAU,GACVC,YAAa,IAJH,E,qDAQd,WAAqB,IAAD,OAClBC,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACjB,GAAD,OAAU,EAAKoB,SAAS,CAAEN,SAAUd,S,oBAE9C,WAAU,IAAD,SAC2BqB,KAAKR,MAA/BC,EADD,EACCA,SAAUC,EADX,EACWA,YACZO,EAAkBR,EAASS,QAAO,SAACC,GAAD,OACtCA,EAAItB,KAAKuB,cAAcC,SAASX,EAAYU,kBAE9C,OACE,sBAAK3B,UAAU,MAAf,UACE,iDACA,cAAC,EAAD,CACEU,YAAY,iBACZC,aAAc,SAACkB,GACb,EAAKP,SAAS,CAAEL,YAAaY,EAAEC,OAAOC,WAG1C,cAAC,EAAD,CAAUxB,QAASiB,W,GA5BTQ,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.9591f536.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport \"./card.css\";\r\n\r\nexport const Card = (props) => {\r\n    return(\r\n        <div className=\"card-container\">\r\n            <img src={`https://robohash.org/${props.user.id}?set=set2&size=180x180`}></img>\r\n            <h2>{ props.user.name }</h2>\r\n            <p>{ props.user.email }</p>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport \"./card-list.css\";\r\nimport { Card } from \"../cards/card\";\r\n\r\nexport const CardList = (props) => {\r\n  return (\r\n    <div className=\"cardlist\">\r\n      {props.monster.map((monster) => (\r\n        <Card key={monster.id} user = {monster} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nimport \"./search.css\";\r\n\r\nexport const SearchBox = ({ placeholder, handleChange }) => {\r\n  return (\r\n    <input\r\n      className=\"search\"\r\n      type=\"search\"\r\n      placeholder={placeholder}\r\n      onChange={handleChange}\r\n    ></input>\r\n  );\r\n};\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { CardList } from \"./Components/card-list/card-list\";\nimport { SearchBox } from \"./Components/search-box/search\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      monsters: [],\n      searchfield: \"\",\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((response) => response.json())\n      .then((user) => this.setState({ monsters: user }));\n  }\n  render() {\n    const { monsters, searchfield } = this.state;\n    const filteredMonster = monsters.filter((mon) =>\n      mon.name.toLowerCase().includes(searchfield.toLowerCase())\n    );\n    return (\n      <div className=\"App\">\n        <h1>Monster-Rolodex</h1>\n        <SearchBox\n          placeholder=\"Search Monster\"\n          handleChange={(e) => {\n            this.setState({ searchfield: e.target.value });\n          }}\n        />\n        <CardList monster={filteredMonster} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}